---
description:
globs:
alwaysApply: false
---
# Chrome Extension Features

This extension leverages Chrome extension APIs with a unified popup interface approach.

## Manifest Configuration

[wxt.config.ts](mdc:wxt.config.ts) configures the Chrome extension manifest with:

- **Permissions**: `contextMenus`, `storage`, `activeTab` 
- **Host Permissions**: `https://*/*`, `http://*/*` (for API calls to *arr applications)
- **WXT React Module**: Enables React development with hot reload
- **No Options UI**: Settings are integrated directly into the popup

## Background Script

[entrypoints/background.ts](mdc:entrypoints/background.ts) handles extension lifecycle:

- **Context Menu Creation**: Creates "Search in *arr apps" context menu on extension install
- **Context Menu Handler**: Captures selected text and stores it for popup use
- **Message Passing**: Coordinates between content scripts and popup

## Storage Management

[src/utils/storage.ts](mdc:src/utils/storage.ts) provides Chrome storage utilities:

- **Sync Storage**: For *arr app configurations (syncs across Chrome instances)
- **Local Storage**: For temporary search terms
- **CRUD Operations**: Add, update, remove, and retrieve app configurations

## User Workflows

### 1. Context Menu Workflow
1. User highlights text on any webpage
2. Right-clicks to see "Search in *arr apps: [text]" option
3. Background script stores the selected text
4. Popup opens with pre-filled search term

### 2. Search & Add Workflow
1. Popup loads stored search term and configured apps
2. Automatic search in the first configured app
3. User can switch between apps using icon bar
4. Click result card to open add form with app-specific options
5. Add content directly to *arr application

### 3. Integrated Settings Management
1. Click settings gear (⚙️) in popup header
2. Settings view opens within the same popup window
3. Add/edit/delete *arr applications with connection testing
4. Click ✕ to return to main view
5. Changes immediately reflect in main interface

## Architecture Benefits

- **Single Window Experience**: No separate tabs or windows required
- **Instant Updates**: Settings changes immediately affect main interface
- **Compact Design**: All functionality within popup constraints
- **Seamless Navigation**: Smooth transitions between views
- **No External Dependencies**: Self-contained within popup

## Security Considerations

- API keys stored in Chrome's encrypted sync storage
- HTTPS enforcement for remote *arr instances
- Input validation and sanitization
- CORS handling for cross-origin API calls
- No external options page reduces attack surface

## Development Commands

- `npm run dev` - Development with hot reload
- `npm run build` - Production build
- `npm run zip` - Create distribution package

## Manifest V3 Compliance

- Uses service worker for background scripts
- Proper permission separation (`permissions` vs `host_permissions`)
- No separate options page configuration required
- Fully compliant with Chrome Extension Manifest V3 requirements
