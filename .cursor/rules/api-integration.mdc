---
description:
globs:
alwaysApply: false
---
# API Integration Patterns

This extension integrates with *arr applications (Sonarr, Radarr) using their REST APIs.

## Core API Service

[src/api/arrApi.ts](mdc:src/api/arrApi.ts) contains the `ArrApiService` class that handles all API communication:

- **Connection Testing**: `testConnection()` - Validates API connectivity
- **Content Search**: `searchContent()` - Searches for movies/TV shows
- **Content Management**: `addContent()`, `getExistingContent()` - Add and check existing content
- **Metadata Retrieval**: `getQualityProfiles()`, `getRootFolders()` - Get configuration options

## Data Types

[src/api/types.ts](mdc:src/api/types.ts) defines all TypeScript interfaces:

- `ArrApp` - Configuration for *arr applications
- `SearchResult` - Search result data structure
- `QualityProfile`, `RootFolder` - Configuration options
- `AddItemRequest` - Request payload for adding content
- `ApiResponse<T>` - Standardized API response wrapper

## API Endpoints

### Sonarr (TV Shows)
- Search: `GET /api/v3/series/lookup?term={searchTerm}`
- Add: `POST /api/v3/series`
- Existing: `GET /api/v3/series`

### Radarr (Movies)  
- Search: `GET /api/v3/movie/lookup?term={searchTerm}`
- Add: `POST /api/v3/movie`
- Existing: `GET /api/v3/movie`

## Authentication

All API calls use the `X-Api-Key` header for authentication. API keys are stored securely using Chrome's sync storage via [src/utils/storage.ts](mdc:src/utils/storage.ts).

## Error Handling

The API service returns `ApiResponse<T>` objects with success/failure status and error messages for consistent error handling across the UI.
